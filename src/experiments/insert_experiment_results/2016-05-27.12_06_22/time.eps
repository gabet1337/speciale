%!PS-Adobe-2.0 EPSF-2.0
%%Title: insert_experiment_results/2016-05-27.12_06_22/time.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Fri May 27 12:07:06 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (insert_experiment_results/2016-05-27.12_06_22/time.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (peter)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 27 12:07:06 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Verdana) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 588 384 M
6395 0 V
stroke
LTb
0.00 0.00 0.00 C 588 384 M
63 0 V
stroke
516 384 M
[ [(Verdana) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 588 948 M
6395 0 V
stroke
LTb
0.00 0.00 0.00 C 588 948 M
63 0 V
stroke
516 948 M
[ [(Verdana) 120.0 0.0 true true 0 ( 100)]
] -40.0 MRshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 588 1512 M
6395 0 V
stroke
LTb
0.00 0.00 0.00 C 588 1512 M
63 0 V
stroke
516 1512 M
[ [(Verdana) 120.0 0.0 true true 0 ( 200)]
] -40.0 MRshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 588 2076 M
6395 0 V
stroke
LTb
0.00 0.00 0.00 C 588 2076 M
63 0 V
stroke
516 2076 M
[ [(Verdana) 120.0 0.0 true true 0 ( 300)]
] -40.0 MRshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 588 2640 M
6395 0 V
stroke
LTb
0.00 0.00 0.00 C 588 2640 M
63 0 V
stroke
516 2640 M
[ [(Verdana) 120.0 0.0 true true 0 ( 400)]
] -40.0 MRshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 588 3203 M
6395 0 V
stroke
LTb
0.00 0.00 0.00 C 588 3203 M
63 0 V
stroke
516 3203 M
[ [(Verdana) 120.0 0.0 true true 0 ( 500)]
] -40.0 MRshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 588 3767 M
6395 0 V
stroke
LTb
0.00 0.00 0.00 C 588 3767 M
63 0 V
stroke
516 3767 M
[ [(Verdana) 120.0 0.0 true true 0 ( 600)]
] -40.0 MRshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 588 4331 M
6395 0 V
stroke
LTb
0.00 0.00 0.00 C 588 4331 M
63 0 V
stroke
516 4331 M
[ [(Verdana) 120.0 0.0 true true 0 ( 700)]
] -40.0 MRshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 588 4895 M
6395 0 V
stroke
LTb
0.00 0.00 0.00 C 588 4895 M
63 0 V
stroke
516 4895 M
[ [(Verdana) 120.0 0.0 true true 0 ( 800)]
] -40.0 MRshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 588 384 M
0 4511 V
stroke
LTb
0.00 0.00 0.00 C 588 384 M
0 63 V
stroke
588 264 M
[ [(Verdana) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 1228 384 M
0 4328 V
0 120 R
0 63 V
stroke
LTb
0.00 0.00 0.00 C 1228 384 M
0 63 V
stroke
1228 264 M
[ [(Verdana) 120.0 0.0 true true 0 ( 50)]
] -40.0 MCshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 1867 384 M
0 4511 V
stroke
LTb
0.00 0.00 0.00 C 1867 384 M
0 63 V
stroke
1867 264 M
[ [(Verdana) 120.0 0.0 true true 0 ( 100)]
] -40.0 MCshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 2507 384 M
0 4511 V
stroke
LTb
0.00 0.00 0.00 C 2507 384 M
0 63 V
stroke
2507 264 M
[ [(Verdana) 120.0 0.0 true true 0 ( 150)]
] -40.0 MCshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 3146 384 M
0 4511 V
stroke
LTb
0.00 0.00 0.00 C 3146 384 M
0 63 V
stroke
3146 264 M
[ [(Verdana) 120.0 0.0 true true 0 ( 200)]
] -40.0 MCshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 3786 384 M
0 4511 V
stroke
LTb
0.00 0.00 0.00 C 3786 384 M
0 63 V
stroke
3786 264 M
[ [(Verdana) 120.0 0.0 true true 0 ( 250)]
] -40.0 MCshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 4425 384 M
0 4511 V
stroke
LTb
0.00 0.00 0.00 C 4425 384 M
0 63 V
stroke
4425 264 M
[ [(Verdana) 120.0 0.0 true true 0 ( 300)]
] -40.0 MCshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 5065 384 M
0 4511 V
stroke
LTb
0.00 0.00 0.00 C 5065 384 M
0 63 V
stroke
5065 264 M
[ [(Verdana) 120.0 0.0 true true 0 ( 350)]
] -40.0 MCshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 5704 384 M
0 4511 V
stroke
LTb
0.00 0.00 0.00 C 5704 384 M
0 63 V
stroke
5704 264 M
[ [(Verdana) 120.0 0.0 true true 0 ( 400)]
] -40.0 MCshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 6344 384 M
0 4511 V
stroke
LTb
0.00 0.00 0.00 C 6344 384 M
0 63 V
stroke
6344 264 M
[ [(Verdana) 120.0 0.0 true true 0 ( 450)]
] -40.0 MCshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTa
0.00 0.00 0.00 C 6983 384 M
0 4511 V
stroke
LTb
0.00 0.00 0.00 C 6983 384 M
0 63 V
stroke
6983 264 M
[ [(Verdana) 120.0 0.0 true true 0 ( 500)]
] -40.0 MCshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UL
LTB
0.00 0.00 0.00 C 588 4895 M
588 384 L
6395 0 V
0 4511 R
-6395 0 R
1.000 UP
stroke
LTb
0.00 0.00 0.00 C LCb setrgbcolor
96 2639 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Verdana) 120.0 0.0 true true 0 (Time \(s\))]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
3785 84 M
[ [(Verdana) 120.0 0.0 true true 0 (N \(input size in Mb\))]
] -40.0 MCshow
LTb
% Begin plot #1
1.000 UP
2.000 UL
LTb
0.00 0.00 0.00 C LCb setrgbcolor
1236 4772 M
[ [(Verdana) 120.0 0.0 true true 0 (Internal)]
] -40.0 MRshow
1.000 UP
2.000 UL
LTb
0.00 0.00 0.00 C 1308 4772 M
351 0 V
601 384 M
13 0 V
12 0 V
13 0 V
13 0 V
13 0 V
13 6 V
12 0 V
13 0 V
13 0 V
13 0 V
12 5 V
13 0 V
13 0 V
13 0 V
13 6 V
12 0 V
13 0 V
13 0 V
13 6 V
13 0 V
12 0 V
13 0 V
13 5 V
13 0 V
13 0 V
12 0 V
13 6 V
13 0 V
13 0 V
12 0 V
13 5 V
13 0 V
13 0 V
13 6 V
12 0 V
13 0 V
13 0 V
13 6 V
13 0 V
12 0 V
13 0 V
13 5 V
13 0 V
13 0 V
12 6 V
13 0 V
13 0 V
13 0 V
13 6 V
12 0 V
13 0 V
13 5 V
13 0 V
12 0 V
13 6 V
13 0 V
13 0 V
13 6 V
12 0 V
13 0 V
13 0 V
13 5 V
13 0 V
12 0 V
13 6 V
13 0 V
13 0 V
13 5 V
12 0 V
13 0 V
13 6 V
13 0 V
12 0 V
13 6 V
13 0 V
13 0 V
13 5 V
12 0 V
13 0 V
13 6 V
13 0 V
13 0 V
12 6 V
13 0 V
13 0 V
13 5 V
13 0 V
12 0 V
13 6 V
13 0 V
13 0 V
12 6 V
13 0 V
13 0 V
13 5 V
13 0 V
12 0 V
13 6 V
13 0 V
13 0 V
13 6 V
12 0 V
stroke 1905 548 M
13 0 V
13 5 V
13 0 V
13 0 V
12 6 V
13 0 V
13 0 V
13 5 V
12 0 V
13 0 V
13 6 V
13 0 V
13 0 V
12 6 V
13 0 V
13 0 V
13 5 V
13 0 V
12 6 V
13 0 V
13 0 V
13 6 V
13 0 V
12 0 V
13 5 V
13 0 V
13 0 V
12 6 V
13 0 V
13 0 V
13 6 V
13 0 V
12 5 V
13 0 V
13 0 V
13 6 V
13 0 V
12 0 V
13 5 V
13 0 V
13 0 V
13 6 V
12 0 V
13 6 V
13 0 V
13 0 V
13 5 V
12 0 V
13 0 V
13 6 V
13 0 V
12 0 V
13 6 V
13 0 V
13 5 V
13 0 V
12 0 V
13 6 V
13 0 V
13 0 V
13 6 V
12 0 V
13 0 V
13 5 V
13 0 V
13 6 V
12 0 V
13 0 V
13 5 V
13 0 V
12 0 V
13 6 V
13 0 V
13 6 V
13 0 V
12 0 V
13 5 V
13 0 V
13 0 V
13 6 V
12 0 V
13 0 V
13 6 V
13 0 V
13 0 V
12 5 V
13 0 V
13 0 V
13 6 V
12 0 V
13 6 V
13 0 V
13 0 V
13 5 V
12 0 V
13 6 V
13 0 V
13 0 V
13 6 V
12 0 V
13 0 V
13 5 V
13 0 V
13 6 V
stroke 3236 762 M
12 0 V
13 0 V
13 5 V
13 0 V
12 6 V
13 0 V
13 0 V
13 6 V
13 0 V
12 0 V
13 5 V
13 0 V
13 6 V
13 0 V
12 0 V
13 6 V
13 0 V
13 0 V
13 5 V
12 0 V
13 6 V
13 0 V
13 0 V
12 6 V
13 0 V
13 5 V
13 0 V
13 0 V
12 6 V
13 0 V
13 0 V
13 5 V
13 0 V
12 6 V
13 0 V
13 0 V
13 6 V
13 0 V
12 5 V
13 0 V
13 0 V
13 6 V
13 0 V
12 0 V
13 6 V
13 0 V
13 5 V
12 0 V
13 0 V
13 6 V
13 0 V
13 6 V
12 0 V
13 0 V
13 5 V
13 0 V
13 6 V
12 0 V
13 0 V
13 5 V
13 0 V
13 6 V
12 0 V
13 0 V
13 6 V
13 0 V
12 5 V
13 0 V
13 0 V
13 6 V
13 0 V
12 0 V
13 6 V
13 0 V
13 5 V
13 0 V
12 0 V
13 6 V
13 0 V
13 6 V
13 0 V
12 0 V
13 5 V
13 0 V
13 6 V
12 0 V
13 0 V
13 6 V
13 0 V
13 5 V
12 0 V
13 0 V
13 6 V
13 0 V
13 5 V
12 0 V
13 0 V
13 6 V
13 0 V
13 6 V
12 0 V
13 0 V
13 5 V
13 0 V
stroke 4566 987 M
12 6 V
13 0 V
13 0 V
13 6 V
13 0 V
12 0 V
13 5 V
13 0 V
13 6 V
13 0 V
12 0 V
13 6 V
13 0 V
13 5 V
13 0 V
12 0 V
13 6 V
13 0 V
13 5 V
12 0 V
13 0 V
13 6 V
13 0 V
13 6 V
12 0 V
13 5 V
13 0 V
13 0 V
13 6 V
12 0 V
13 6 V
13 0 V
13 0 V
13 5 V
12 0 V
13 6 V
13 0 V
13 0 V
13 6 V
12 0 V
13 5 V
13 0 V
13 0 V
12 6 V
13 0 V
13 5 V
13 0 V
13 6 V
12 0 V
13 0 V
13 6 V
13 0 V
13 5 V
12 0 V
13 0 V
13 6 V
13 0 V
13 6 V
12 0 V
13 0 V
13 5 V
13 0 V
12 6 V
13 0 V
13 6 V
13 0 V
13 0 V
12 5 V
13 0 V
13 6 V
13 0 V
13 0 V
12 6 V
13 0 V
13 5 V
13 0 V
13 6 V
12 0 V
13 0 V
13 5 V
13 0 V
12 6 V
13 0 V
13 6 V
13 0 V
13 0 V
12 5 V
13 0 V
13 6 V
13 0 V
13 6 V
12 0 V
13 5 V
13 6 V
13 11 V
13 11 V
12 6 V
13 6 V
13 11 V
13 11 V
12 12 V
13 16 V
13 12 V
13 11 V
stroke 5896 1320 M
13 6 V
12 0 V
13 5 V
13 0 V
13 6 V
13 0 V
12 6 V
13 5 V
13 6 V
13 6 V
13 11 V
12 5 V
13 6 V
13 11 V
13 12 V
12 11 V
13 11 V
13 6 V
13 11 V
13 11 V
12 12 V
13 5 V
13 12 V
13 16 V
13 12 V
12 17 V
13 17 V
13 22 V
13 17 V
13 23 V
12 22 V
13 23 V
13 22 V
13 28 V
13 23 V
12 28 V
13 34 V
13 34 V
13 28 V
12 34 V
13 34 V
13 34 V
13 33 V
13 34 V
12 45 V
13 45 V
13 46 V
13 45 V
13 50 V
12 46 V
13 50 V
13 51 V
13 56 V
13 51 V
12 51 V
13 51 V
13 45 V
13 51 V
12 50 V
13 57 V
13 56 V
13 62 V
13 62 V
12 68 V
13 73 V
13 68 V
13 73 V
13 68 V
12 67 V
13 62 V
13 68 V
13 73 V
13 147 V
12 90 V
13 96 V
13 96 V
13 96 V
12 90 V
13 90 V
13 96 V
13 90 V
13 96 V
12 90 V
13 96 V
13 107 V
601 384 Box
614 384 Box
626 384 Box
639 384 Box
652 384 Box
665 384 Box
678 390 Box
690 390 Box
703 390 Box
716 390 Box
729 390 Box
741 395 Box
754 395 Box
767 395 Box
780 395 Box
793 401 Box
805 401 Box
818 401 Box
831 401 Box
844 407 Box
857 407 Box
869 407 Box
882 407 Box
895 412 Box
908 412 Box
921 412 Box
933 412 Box
946 418 Box
959 418 Box
972 418 Box
984 418 Box
997 423 Box
1010 423 Box
1023 423 Box
1036 429 Box
1048 429 Box
1061 429 Box
1074 429 Box
1087 435 Box
1100 435 Box
1112 435 Box
1125 435 Box
1138 440 Box
1151 440 Box
1164 440 Box
1176 446 Box
1189 446 Box
1202 446 Box
1215 446 Box
1228 452 Box
1240 452 Box
1253 452 Box
1266 457 Box
1279 457 Box
1291 457 Box
1304 463 Box
1317 463 Box
1330 463 Box
1343 469 Box
1355 469 Box
1368 469 Box
1381 469 Box
1394 474 Box
1407 474 Box
1419 474 Box
1432 480 Box
1445 480 Box
1458 480 Box
1471 485 Box
1483 485 Box
1496 485 Box
1509 491 Box
1522 491 Box
1534 491 Box
1547 497 Box
1560 497 Box
1573 497 Box
1586 502 Box
1598 502 Box
1611 502 Box
1624 508 Box
1637 508 Box
1650 508 Box
1662 514 Box
1675 514 Box
1688 514 Box
1701 519 Box
1714 519 Box
1726 519 Box
1739 525 Box
1752 525 Box
1765 525 Box
1777 531 Box
1790 531 Box
1803 531 Box
1816 536 Box
1829 536 Box
1841 536 Box
1854 542 Box
1867 542 Box
1880 542 Box
1893 548 Box
1905 548 Box
1918 548 Box
1931 553 Box
1944 553 Box
1957 553 Box
1969 559 Box
1982 559 Box
1995 559 Box
2008 564 Box
2020 564 Box
2033 564 Box
2046 570 Box
2059 570 Box
2072 570 Box
2084 576 Box
2097 576 Box
2110 576 Box
2123 581 Box
2136 581 Box
2148 587 Box
2161 587 Box
2174 587 Box
2187 593 Box
2200 593 Box
2212 593 Box
2225 598 Box
2238 598 Box
2251 598 Box
2263 604 Box
2276 604 Box
2289 604 Box
2302 610 Box
2315 610 Box
2327 615 Box
2340 615 Box
2353 615 Box
2366 621 Box
2379 621 Box
2391 621 Box
2404 626 Box
2417 626 Box
2430 626 Box
2443 632 Box
2455 632 Box
2468 638 Box
2481 638 Box
2494 638 Box
2507 643 Box
2519 643 Box
2532 643 Box
2545 649 Box
2558 649 Box
2570 649 Box
2583 655 Box
2596 655 Box
2609 660 Box
2622 660 Box
2634 660 Box
2647 666 Box
2660 666 Box
2673 666 Box
2686 672 Box
2698 672 Box
2711 672 Box
2724 677 Box
2737 677 Box
2750 683 Box
2762 683 Box
2775 683 Box
2788 688 Box
2801 688 Box
2813 688 Box
2826 694 Box
2839 694 Box
2852 700 Box
2865 700 Box
2877 700 Box
2890 705 Box
2903 705 Box
2916 705 Box
2929 711 Box
2941 711 Box
2954 711 Box
2967 717 Box
2980 717 Box
2993 717 Box
3005 722 Box
3018 722 Box
3031 722 Box
3044 728 Box
3056 728 Box
3069 734 Box
3082 734 Box
3095 734 Box
3108 739 Box
3120 739 Box
3133 745 Box
3146 745 Box
3159 745 Box
3172 751 Box
3184 751 Box
3197 751 Box
3210 756 Box
3223 756 Box
3236 762 Box
3248 762 Box
3261 762 Box
3274 767 Box
3287 767 Box
3299 773 Box
3312 773 Box
3325 773 Box
3338 779 Box
3351 779 Box
3363 779 Box
3376 784 Box
3389 784 Box
3402 790 Box
3415 790 Box
3427 790 Box
3440 796 Box
3453 796 Box
3466 796 Box
3479 801 Box
3491 801 Box
3504 807 Box
3517 807 Box
3530 807 Box
3542 813 Box
3555 813 Box
3568 818 Box
3581 818 Box
3594 818 Box
3606 824 Box
3619 824 Box
3632 824 Box
3645 829 Box
3658 829 Box
3670 835 Box
3683 835 Box
3696 835 Box
3709 841 Box
3722 841 Box
3734 846 Box
3747 846 Box
3760 846 Box
3773 852 Box
3786 852 Box
3798 852 Box
3811 858 Box
3824 858 Box
3837 863 Box
3849 863 Box
3862 863 Box
3875 869 Box
3888 869 Box
3901 875 Box
3913 875 Box
3926 875 Box
3939 880 Box
3952 880 Box
3965 886 Box
3977 886 Box
3990 886 Box
4003 891 Box
4016 891 Box
4029 897 Box
4041 897 Box
4054 897 Box
4067 903 Box
4080 903 Box
4092 908 Box
4105 908 Box
4118 908 Box
4131 914 Box
4144 914 Box
4156 914 Box
4169 920 Box
4182 920 Box
4195 925 Box
4208 925 Box
4220 925 Box
4233 931 Box
4246 931 Box
4259 937 Box
4272 937 Box
4284 937 Box
4297 942 Box
4310 942 Box
4323 948 Box
4335 948 Box
4348 948 Box
4361 954 Box
4374 954 Box
4387 959 Box
4399 959 Box
4412 959 Box
4425 965 Box
4438 965 Box
4451 970 Box
4463 970 Box
4476 970 Box
4489 976 Box
4502 976 Box
4515 982 Box
4527 982 Box
4540 982 Box
4553 987 Box
4566 987 Box
4578 993 Box
4591 993 Box
4604 993 Box
4617 999 Box
4630 999 Box
4642 999 Box
4655 1004 Box
4668 1004 Box
4681 1010 Box
4694 1010 Box
4706 1010 Box
4719 1016 Box
4732 1016 Box
4745 1021 Box
4758 1021 Box
4770 1021 Box
4783 1027 Box
4796 1027 Box
4809 1032 Box
4821 1032 Box
4834 1032 Box
4847 1038 Box
4860 1038 Box
4873 1044 Box
4885 1044 Box
4898 1049 Box
4911 1049 Box
4924 1049 Box
4937 1055 Box
4949 1055 Box
4962 1061 Box
4975 1061 Box
4988 1061 Box
5001 1066 Box
5013 1066 Box
5026 1072 Box
5039 1072 Box
5052 1072 Box
5065 1078 Box
5077 1078 Box
5090 1083 Box
5103 1083 Box
5116 1083 Box
5128 1089 Box
5141 1089 Box
5154 1094 Box
5167 1094 Box
5180 1100 Box
5192 1100 Box
5205 1100 Box
5218 1106 Box
5231 1106 Box
5244 1111 Box
5256 1111 Box
5269 1111 Box
5282 1117 Box
5295 1117 Box
5308 1123 Box
5320 1123 Box
5333 1123 Box
5346 1128 Box
5359 1128 Box
5371 1134 Box
5384 1134 Box
5397 1140 Box
5410 1140 Box
5423 1140 Box
5435 1145 Box
5448 1145 Box
5461 1151 Box
5474 1151 Box
5487 1151 Box
5499 1157 Box
5512 1157 Box
5525 1162 Box
5538 1162 Box
5551 1168 Box
5563 1168 Box
5576 1168 Box
5589 1173 Box
5602 1173 Box
5614 1179 Box
5627 1179 Box
5640 1185 Box
5653 1185 Box
5666 1185 Box
5678 1190 Box
5691 1190 Box
5704 1196 Box
5717 1196 Box
5730 1202 Box
5742 1202 Box
5755 1207 Box
5768 1213 Box
5781 1224 Box
5794 1235 Box
5806 1241 Box
5819 1247 Box
5832 1258 Box
5845 1269 Box
5857 1281 Box
5870 1297 Box
5883 1309 Box
5896 1320 Box
5909 1326 Box
5921 1326 Box
5934 1331 Box
5947 1331 Box
5960 1337 Box
5973 1337 Box
5985 1343 Box
5998 1348 Box
6011 1354 Box
6024 1360 Box
6037 1371 Box
6049 1376 Box
6062 1382 Box
6075 1393 Box
6088 1405 Box
6100 1416 Box
6113 1427 Box
6126 1433 Box
6139 1444 Box
6152 1455 Box
6164 1467 Box
6177 1472 Box
6190 1484 Box
6203 1500 Box
6216 1512 Box
6228 1529 Box
6241 1546 Box
6254 1568 Box
6267 1585 Box
6280 1608 Box
6292 1630 Box
6305 1653 Box
6318 1675 Box
6331 1703 Box
6344 1726 Box
6356 1754 Box
6369 1788 Box
6382 1822 Box
6395 1850 Box
6407 1884 Box
6420 1918 Box
6433 1952 Box
6446 1985 Box
6459 2019 Box
6471 2064 Box
6484 2109 Box
6497 2155 Box
6510 2200 Box
6523 2250 Box
6535 2296 Box
6548 2346 Box
6561 2397 Box
6574 2453 Box
6587 2504 Box
6599 2555 Box
6612 2606 Box
6625 2651 Box
6638 2702 Box
6650 2752 Box
6663 2809 Box
6676 2865 Box
6689 2927 Box
6702 2989 Box
6714 3057 Box
6727 3130 Box
6740 3198 Box
6753 3271 Box
6766 3339 Box
6778 3406 Box
6791 3468 Box
6804 3536 Box
6817 3609 Box
6830 3756 Box
6842 3846 Box
6855 3942 Box
6868 4038 Box
6881 4134 Box
6893 4224 Box
6906 4314 Box
6919 4410 Box
6932 4500 Box
6945 4596 Box
6957 4686 Box
6970 4782 Box
6983 4889 Box
1483 4772 Box
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UP
1.000 UL
LTb
0.00 0.00 0.00 C stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Verdana
