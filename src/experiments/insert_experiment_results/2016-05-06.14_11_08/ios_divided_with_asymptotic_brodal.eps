%!PS-Adobe-2.0 EPSF-2.0
%%Title: insert_experiment_results/2016-05-06.14_11_08/ios_divided_with_asymptotic_brodal.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Sat May 21 12:25:59 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -36 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (insert_experiment_results/2016-05-06.14_11_08/ios_divided_with_asymptotic_brodal.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (peter)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat May 21 12:25:59 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Verdana) findfont 110 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
0.50 0.50 0.50 C 165 352 M
0 63 V
stroke
165 242 M
[ [(Verdana) 110.0 0.0 true true 0 ( 0)]
] -36.7 MCshow
1.000 UL
LTb
0.50 0.50 0.50 C 1142 352 M
0 63 V
stroke
1142 242 M
[ [(Verdana) 110.0 0.0 true true 0 ( 500)]
] -36.7 MCshow
1.000 UL
LTb
0.50 0.50 0.50 C 2118 352 M
0 63 V
stroke
2118 242 M
[ [(Verdana) 110.0 0.0 true true 0 ( 1000)]
] -36.7 MCshow
1.000 UL
LTb
0.50 0.50 0.50 C 3095 352 M
0 63 V
stroke
3095 242 M
[ [(Verdana) 110.0 0.0 true true 0 ( 1500)]
] -36.7 MCshow
1.000 UL
LTb
0.50 0.50 0.50 C 4071 352 M
0 63 V
stroke
4071 242 M
[ [(Verdana) 110.0 0.0 true true 0 ( 2000)]
] -36.7 MCshow
1.000 UL
LTb
0.50 0.50 0.50 C 5048 352 M
0 63 V
stroke
5048 242 M
[ [(Verdana) 110.0 0.0 true true 0 ( 2500)]
] -36.7 MCshow
1.000 UL
LTb
0.50 0.50 0.50 C 6024 352 M
0 63 V
stroke
6024 242 M
[ [(Verdana) 110.0 0.0 true true 0 ( 3000)]
] -36.7 MCshow
1.000 UL
LTb
0.50 0.50 0.50 C 7001 352 M
0 63 V
stroke
7001 242 M
[ [(Verdana) 110.0 0.0 true true 0 ( 3500)]
] -36.7 MCshow
1.000 UL
LTb
0.50 0.50 0.50 C 1.000 UL
LTB
0.50 0.50 0.50 C 165 4907 M
165 352 L
6836 0 V
0 4555 R
-6836 0 R
1.000 UP
stroke
LTb
0.50 0.50 0.50 C LCb setrgbcolor
3583 77 M
[ [(Verdana) 110.0 0.0 true true 0 (N \(input size in Mb\))]
] -36.7 MCshow
LTb
% Begin plot #1
1.000 UP
2.000 UL
LTb
0.00 0.00 0.00 C 185 352 M
19 699 V
20 266 V
19 531 V
20 -185 V
19 -149 V
20 22 V
19 258 V
20 111 V
19 -80 V
20 464 V
19 -148 V
20 73 V
19 -85 V
20 20 V
20 180 V
19 69 V
20 -20 V
19 160 V
20 -54 V
19 -40 V
20 117 V
19 95 V
20 -45 V
19 -52 V
20 22 V
19 -50 V
20 7 V
19 -20 V
20 22 V
19 73 V
20 126 V
20 -43 V
19 120 V
20 -34 V
19 -26 V
20 11 V
19 -21 V
20 37 V
19 -24 V
20 16 V
19 -5 V
20 -11 V
19 49 V
20 -27 V
19 10 V
20 126 V
20 92 V
19 -6 V
20 -16 V
19 -21 V
20 11 V
19 -16 V
20 2 V
19 93 V
20 -35 V
19 8 V
20 -9 V
19 22 V
20 -14 V
19 17 V
20 122 V
19 4 V
20 17 V
20 -13 V
19 25 V
20 45 V
19 14 V
20 28 V
19 19 V
20 -11 V
19 10 V
20 48 V
19 6 V
20 12 V
19 -3 V
20 -14 V
19 57 V
20 -4 V
20 8 V
19 -7 V
20 -3 V
19 4 V
20 11 V
19 50 V
20 81 V
19 33 V
20 -10 V
19 -10 V
20 2 V
19 110 V
20 -33 V
19 25 V
20 -3 V
19 6 V
20 -2 V
20 -2 V
19 -6 V
20 3 V
19 79 V
20 -10 V
19 37 V
20 -11 V
19 7 V
20 -5 V
stroke 2216 3761 M
19 50 V
20 3 V
19 101 V
20 -14 V
19 -3 V
20 2 V
20 18 V
19 -10 V
20 4 V
19 2 V
20 -6 V
19 -3 V
20 7 V
19 2 V
20 -8 V
19 26 V
20 -7 V
19 4 V
20 2 V
19 -3 V
20 33 V
19 12 V
20 5 V
20 4 V
19 12 V
20 5 V
19 7 V
20 1 V
19 -1 V
20 -3 V
19 7 V
20 -1 V
19 3 V
20 0 V
19 -2 V
20 10 V
19 4 V
20 4 V
20 7 V
19 44 V
20 -15 V
19 -4 V
20 6 V
19 3 V
20 12 V
19 19 V
20 -1 V
19 28 V
20 6 V
19 3 V
20 36 V
19 1 V
20 -3 V
19 5 V
20 0 V
20 -5 V
19 6 V
20 5 V
19 -5 V
20 7 V
19 -1 V
20 6 V
19 7 V
20 0 V
19 22 V
20 5 V
19 9 V
20 -2 V
19 10 V
20 5 V
20 1 V
19 32 V
20 0 V
19 16 V
20 4 V
19 6 V
20 14 V
19 -7 V
20 -3 V
19 17 V
20 -1 V
19 17 V
20 0 V
19 14 V
20 -2 V
20 2 V
19 36 V
20 -5 V
19 7 V
20 6 V
19 -1 V
20 13 V
19 -2 V
20 2 V
19 -4 V
20 4 V
19 -2 V
20 -4 V
19 2 V
20 0 V
19 -2 V
20 1 V
20 5 V
19 -3 V
stroke 4247 4407 M
20 30 V
19 4 V
20 1 V
19 4 V
20 4 V
19 -5 V
20 -2 V
19 31 V
20 -2 V
19 5 V
20 -4 V
19 -2 V
20 -4 V
20 11 V
19 18 V
20 7 V
19 4 V
20 4 V
19 -7 V
20 0 V
19 -1 V
20 2 V
19 28 V
20 -12 V
19 -6 V
20 19 V
19 8 V
20 -2 V
19 50 V
20 -20 V
20 -8 V
19 9 V
20 -3 V
19 5 V
20 -2 V
19 36 V
20 1 V
19 4 V
20 11 V
19 2 V
20 -5 V
19 18 V
20 25 V
19 -5 V
20 14 V
20 1 V
19 17 V
20 21 V
19 0 V
20 15 V
19 3 V
20 -6 V
19 4 V
20 -3 V
19 1 V
20 2 V
19 -1 V
20 3 V
19 2 V
20 -2 V
19 5 V
20 25 V
20 6 V
19 2 V
20 -2 V
19 23 V
20 9 V
19 -5 V
20 4 V
19 1 V
20 -1 V
19 2 V
20 -7 V
19 2 V
20 2 V
19 -1 V
20 4 V
20 1 V
19 0 V
20 5 V
19 -7 V
20 1 V
19 4 V
20 -2 V
19 4 V
20 10 V
19 -1 V
20 -2 V
19 1 V
20 12 V
19 2 V
20 2 V
19 28 V
20 2 V
20 -5 V
19 0 V
20 1 V
19 5 V
20 2 V
19 0 V
20 1 V
19 1 V
20 1 V
19 4 V
stroke 6278 4868 M
20 -1 V
19 4 V
20 10 V
19 1 V
20 5 V
20 2 V
19 1 V
20 2 V
19 -1 V
20 16 V
185 352 Box
204 1051 Box
224 1317 Box
243 1848 Box
263 1663 Box
282 1514 Box
302 1536 Box
321 1794 Box
341 1905 Box
360 1825 Box
380 2289 Box
399 2141 Box
419 2214 Box
438 2129 Box
458 2149 Box
478 2329 Box
497 2398 Box
517 2378 Box
536 2538 Box
556 2484 Box
575 2444 Box
595 2561 Box
614 2656 Box
634 2611 Box
653 2559 Box
673 2581 Box
692 2531 Box
712 2538 Box
731 2518 Box
751 2540 Box
770 2613 Box
790 2739 Box
810 2696 Box
829 2816 Box
849 2782 Box
868 2756 Box
888 2767 Box
907 2746 Box
927 2783 Box
946 2759 Box
966 2775 Box
985 2770 Box
1005 2759 Box
1024 2808 Box
1044 2781 Box
1063 2791 Box
1083 2917 Box
1103 3009 Box
1122 3003 Box
1142 2987 Box
1161 2966 Box
1181 2977 Box
1200 2961 Box
1220 2963 Box
1239 3056 Box
1259 3021 Box
1278 3029 Box
1298 3020 Box
1317 3042 Box
1337 3028 Box
1356 3045 Box
1376 3167 Box
1395 3171 Box
1415 3188 Box
1435 3175 Box
1454 3200 Box
1474 3245 Box
1493 3259 Box
1513 3287 Box
1532 3306 Box
1552 3295 Box
1571 3305 Box
1591 3353 Box
1610 3359 Box
1630 3371 Box
1649 3368 Box
1669 3354 Box
1688 3411 Box
1708 3407 Box
1728 3415 Box
1747 3408 Box
1767 3405 Box
1786 3409 Box
1806 3420 Box
1825 3470 Box
1845 3551 Box
1864 3584 Box
1884 3574 Box
1903 3564 Box
1923 3566 Box
1942 3676 Box
1962 3643 Box
1981 3668 Box
2001 3665 Box
2020 3671 Box
2040 3669 Box
2060 3667 Box
2079 3661 Box
2099 3664 Box
2118 3743 Box
2138 3733 Box
2157 3770 Box
2177 3759 Box
2196 3766 Box
2216 3761 Box
2235 3811 Box
2255 3814 Box
2274 3915 Box
2294 3901 Box
2313 3898 Box
2333 3900 Box
2353 3918 Box
2372 3908 Box
2392 3912 Box
2411 3914 Box
2431 3908 Box
2450 3905 Box
2470 3912 Box
2489 3914 Box
2509 3906 Box
2528 3932 Box
2548 3925 Box
2567 3929 Box
2587 3931 Box
2606 3928 Box
2626 3961 Box
2645 3973 Box
2665 3978 Box
2685 3982 Box
2704 3994 Box
2724 3999 Box
2743 4006 Box
2763 4007 Box
2782 4006 Box
2802 4003 Box
2821 4010 Box
2841 4009 Box
2860 4012 Box
2880 4012 Box
2899 4010 Box
2919 4020 Box
2938 4024 Box
2958 4028 Box
2978 4035 Box
2997 4079 Box
3017 4064 Box
3036 4060 Box
3056 4066 Box
3075 4069 Box
3095 4081 Box
3114 4100 Box
3134 4099 Box
3153 4127 Box
3173 4133 Box
3192 4136 Box
3212 4172 Box
3231 4173 Box
3251 4170 Box
3270 4175 Box
3290 4175 Box
3310 4170 Box
3329 4176 Box
3349 4181 Box
3368 4176 Box
3388 4183 Box
3407 4182 Box
3427 4188 Box
3446 4195 Box
3466 4195 Box
3485 4217 Box
3505 4222 Box
3524 4231 Box
3544 4229 Box
3563 4239 Box
3583 4244 Box
3603 4245 Box
3622 4277 Box
3642 4277 Box
3661 4293 Box
3681 4297 Box
3700 4303 Box
3720 4317 Box
3739 4310 Box
3759 4307 Box
3778 4324 Box
3798 4323 Box
3817 4340 Box
3837 4340 Box
3856 4354 Box
3876 4352 Box
3896 4354 Box
3915 4390 Box
3935 4385 Box
3954 4392 Box
3974 4398 Box
3993 4397 Box
4013 4410 Box
4032 4408 Box
4052 4410 Box
4071 4406 Box
4091 4410 Box
4110 4408 Box
4130 4404 Box
4149 4406 Box
4169 4406 Box
4188 4404 Box
4208 4405 Box
4228 4410 Box
4247 4407 Box
4267 4437 Box
4286 4441 Box
4306 4442 Box
4325 4446 Box
4345 4450 Box
4364 4445 Box
4384 4443 Box
4403 4474 Box
4423 4472 Box
4442 4477 Box
4462 4473 Box
4481 4471 Box
4501 4467 Box
4521 4478 Box
4540 4496 Box
4560 4503 Box
4579 4507 Box
4599 4511 Box
4618 4504 Box
4638 4504 Box
4657 4503 Box
4677 4505 Box
4696 4533 Box
4716 4521 Box
4735 4515 Box
4755 4534 Box
4774 4542 Box
4794 4540 Box
4813 4590 Box
4833 4570 Box
4853 4562 Box
4872 4571 Box
4892 4568 Box
4911 4573 Box
4931 4571 Box
4950 4607 Box
4970 4608 Box
4989 4612 Box
5009 4623 Box
5028 4625 Box
5048 4620 Box
5067 4638 Box
5087 4663 Box
5106 4658 Box
5126 4672 Box
5146 4673 Box
5165 4690 Box
5185 4711 Box
5204 4711 Box
5224 4726 Box
5243 4729 Box
5263 4723 Box
5282 4727 Box
5302 4724 Box
5321 4725 Box
5341 4727 Box
5360 4726 Box
5380 4729 Box
5399 4731 Box
5419 4729 Box
5438 4734 Box
5458 4759 Box
5478 4765 Box
5497 4767 Box
5517 4765 Box
5536 4788 Box
5556 4797 Box
5575 4792 Box
5595 4796 Box
5614 4797 Box
5634 4796 Box
5653 4798 Box
5673 4791 Box
5692 4793 Box
5712 4795 Box
5731 4794 Box
5751 4798 Box
5771 4799 Box
5790 4799 Box
5810 4804 Box
5829 4797 Box
5849 4798 Box
5868 4802 Box
5888 4800 Box
5907 4804 Box
5927 4814 Box
5946 4813 Box
5966 4811 Box
5985 4812 Box
6005 4824 Box
6024 4826 Box
6044 4828 Box
6063 4856 Box
6083 4858 Box
6103 4853 Box
6122 4853 Box
6142 4854 Box
6161 4859 Box
6181 4861 Box
6200 4861 Box
6220 4862 Box
6239 4863 Box
6259 4864 Box
6278 4868 Box
6298 4867 Box
6317 4871 Box
6337 4881 Box
6356 4882 Box
6376 4887 Box
6396 4889 Box
6415 4890 Box
6435 4892 Box
6454 4891 Box
6474 4907 Box
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UP
1.000 UL
LTb
0.50 0.50 0.50 C stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Verdana
