%!PS-Adobe-2.0 EPSF-2.0
%%Title: insert_experiment_results/2016-05-06.14_11_08/time_divided_with_asymptotic_mysql.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Fri May 20 16:27:43 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -36 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (insert_experiment_results/2016-05-06.14_11_08/time_divided_with_asymptotic_mysql.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (peter)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 20 16:27:43 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Verdana) findfont 110 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
0.50 0.50 0.50 C 165 352 M
0 63 V
stroke
165 242 M
[ [(Verdana) 110.0 0.0 true true 0 ( 0)]
] -36.7 MCshow
1.000 UL
LTb
0.50 0.50 0.50 C 1304 352 M
0 63 V
stroke
1304 242 M
[ [(Verdana) 110.0 0.0 true true 0 ( 2000)]
] -36.7 MCshow
1.000 UL
LTb
0.50 0.50 0.50 C 2444 352 M
0 63 V
stroke
2444 242 M
[ [(Verdana) 110.0 0.0 true true 0 ( 4000)]
] -36.7 MCshow
1.000 UL
LTb
0.50 0.50 0.50 C 3583 352 M
0 63 V
stroke
3583 242 M
[ [(Verdana) 110.0 0.0 true true 0 ( 6000)]
] -36.7 MCshow
1.000 UL
LTb
0.50 0.50 0.50 C 4722 352 M
0 63 V
stroke
4722 242 M
[ [(Verdana) 110.0 0.0 true true 0 ( 8000)]
] -36.7 MCshow
1.000 UL
LTb
0.50 0.50 0.50 C 5862 352 M
0 63 V
stroke
5862 242 M
[ [(Verdana) 110.0 0.0 true true 0 ( 10000)]
] -36.7 MCshow
1.000 UL
LTb
0.50 0.50 0.50 C 7001 352 M
0 63 V
stroke
7001 242 M
[ [(Verdana) 110.0 0.0 true true 0 ( 12000)]
] -36.7 MCshow
1.000 UL
LTb
0.50 0.50 0.50 C 1.000 UL
LTB
0.50 0.50 0.50 C 165 4907 M
165 352 L
6836 0 V
0 4555 R
-6836 0 R
1.000 UP
stroke
LTb
0.50 0.50 0.50 C LCb setrgbcolor
3583 77 M
[ [(Verdana) 110.0 0.0 true true 0 (N \(input size in Mb\))]
] -36.7 MCshow
LTb
% Begin plot #1
1.000 UP
2.000 UL
LTb
0.13 0.37 0.66 C LCb setrgbcolor
6476 4789 M
[ [(Verdana) 110.0 0.0 true true 0 (MySQL)]
] -36.7 MRshow
1.000 UP
2.000 UL
LTb
0.13 0.37 0.66 C 6542 4789 M
327 0 V
171 352 M
5 0 V
6 0 V
6 2657 V
5 -531 V
6 1417 V
6 1012 V
6 -569 V
5 -443 V
6 -355 V
6 677 V
5 -322 V
6 545 V
6 -292 V
5 455 V
6 -265 V
6 -235 V
6 382 V
5 -217 V
6 -196 V
6 329 V
5 299 V
6 -189 V
6 269 V
5 -177 V
6 -163 V
6 242 V
6 -155 V
5 223 V
6 -147 V
6 -137 V
5 204 V
6 -131 V
6 -123 V
5 187 V
6 -118 V
6 -111 V
5 173 V
6 -107 V
6 -102 V
6 162 V
5 -99 V
6 -94 V
6 151 V
5 -91 V
6 -87 V
6 142 V
5 -84 V
6 -82 V
6 135 V
6 -79 V
5 128 V
6 -77 V
6 -75 V
5 122 V
6 -72 V
6 -70 V
5 115 V
6 -68 V
6 -66 V
5 110 V
6 -64 V
6 -63 V
6 106 V
5 -62 V
6 -59 V
6 101 V
5 -59 V
6 -56 V
6 97 V
5 -56 V
6 94 V
6 -55 V
6 -53 V
5 90 V
6 -52 V
6 -51 V
5 87 V
6 -50 V
6 -49 V
5 83 V
6 -48 V
6 -46 V
6 80 V
5 -46 V
6 -45 V
6 78 V
5 -44 V
6 -44 V
6 76 V
5 -43 V
6 -42 V
6 74 V
5 -42 V
6 72 V
6 -41 V
6 -40 V
5 69 V
6 -39 V
6 -39 V
5 68 V
6 -39 V
6 -37 V
stroke 752 4170 M
5 65 V
6 -37 V
6 64 V
6 -36 V
5 62 V
6 -36 V
6 -35 V
5 61 V
6 -35 V
6 -35 V
5 60 V
6 -34 V
6 -34 V
6 58 V
5 -33 V
6 -33 V
6 57 V
5 -32 V
6 -32 V
6 55 V
5 55 V
6 -32 V
6 -31 V
5 53 V
6 -30 V
6 -31 V
6 52 V
5 -30 V
6 -29 V
6 51 V
5 -30 V
6 50 V
6 -29 V
5 -28 V
6 49 V
6 -28 V
6 -28 V
5 48 V
6 -28 V
6 -27 V
5 47 V
6 -27 V
6 -27 V
5 46 V
6 -26 V
6 -26 V
6 -26 V
5 45 V
6 -25 V
6 44 V
5 -25 V
6 -25 V
6 43 V
5 -24 V
6 -25 V
6 43 V
5 -24 V
6 -24 V
6 42 V
6 -24 V
5 -23 V
6 41 V
6 -23 V
5 40 V
6 -23 V
6 -23 V
5 40 V
6 -22 V
6 -23 V
6 39 V
5 -22 V
6 -22 V
6 39 V
5 -22 V
6 -22 V
6 38 V
5 -21 V
6 -21 V
6 37 V
5 -21 V
6 37 V
6 -21 V
6 -21 V
5 37 V
6 -21 V
6 -20 V
5 36 V
6 -20 V
6 -20 V
5 35 V
6 -20 V
6 -20 V
6 35 V
5 -19 V
6 34 V
6 -20 V
5 -19 V
6 34 V
6 -19 V
5 -19 V
6 33 V
6 -18 V
6 -19 V
5 33 V
stroke 1344 4203 M
6 -19 V
6 33 V
5 -19 V
6 -18 V
6 32 V
5 -18 V
6 -18 V
6 32 V
5 -18 V
6 -18 V
6 32 V
6 -18 V
5 -17 V
6 30 V
6 -17 V
5 31 V
6 -18 V
6 -17 V
5 30 V
6 -17 V
6 -17 V
6 30 V
5 -17 V
6 30 V
6 -17 V
5 29 V
6 -16 V
6 -17 V
5 29 V
6 -16 V
6 28 V
6 -16 V
5 -16 V
6 28 V
6 -16 V
5 -16 V
6 28 V
6 -16 V
5 27 V
6 -15 V
6 -16 V
5 27 V
6 -15 V
6 -16 V
6 27 V
5 -15 V
6 -15 V
6 26 V
5 -15 V
6 26 V
6 -15 V
5 -15 V
6 26 V
6 -14 V
6 -15 V
5 26 V
6 -15 V
6 -15 V
5 26 V
6 -15 V
6 -14 V
5 25 V
6 -14 V
6 -15 V
5 25 V
6 -14 V
6 25 V
6 -14 V
5 24 V
6 -14 V
6 -14 V
5 25 V
6 -14 V
6 24 V
5 -14 V
6 -14 V
6 24 V
6 -14 V
5 -13 V
6 23 V
6 -13 V
5 -13 V
6 23 V
6 -14 V
5 24 V
6 -14 V
6 -13 V
6 23 V
5 -13 V
6 -13 V
6 23 V
5 -13 V
6 -13 V
6 22 V
5 -13 V
6 23 V
6 -13 V
5 -13 V
6 22 V
6 -13 V
6 -12 V
5 22 V
6 -13 V
6 -12 V
stroke 1937 4214 M
5 21 V
6 -12 V
6 22 V
5 -13 V
6 -12 V
6 21 V
6 -12 V
5 21 V
6 -12 V
6 -12 V
5 21 V
6 -12 V
6 -12 V
5 21 V
6 -12 V
6 20 V
6 -12 V
5 -11 V
6 20 V
6 -12 V
5 -11 V
6 20 V
6 -12 V
5 -11 V
6 20 V
6 -12 V
5 20 V
6 -11 V
6 -12 V
6 20 V
5 -11 V
6 -12 V
6 20 V
5 -11 V
6 19 V
6 -11 V
5 -11 V
6 19 V
6 -11 V
6 19 V
5 19 V
6 -11 V
6 -11 V
5 19 V
6 -11 V
6 -11 V
5 19 V
6 19 V
6 -11 V
5 -11 V
6 18 V
6 -11 V
6 -10 V
5 18 V
6 -11 V
6 19 V
5 -11 V
6 18 V
6 -11 V
5 -10 V
6 18 V
6 -11 V
6 18 V
5 -10 V
6 -11 V
6 18 V
5 -11 V
6 18 V
6 -10 V
5 -11 V
6 18 V
6 -10 V
6 -11 V
5 18 V
6 -11 V
6 -10 V
5 18 V
6 -11 V
6 18 V
5 -11 V
6 -10 V
6 17 V
5 -10 V
6 -10 V
6 17 V
6 -10 V
5 -9 V
6 16 V
6 -10 V
5 17 V
6 -10 V
6 -9 V
5 16 V
6 -10 V
6 -9 V
6 16 V
5 -9 V
6 16 V
6 -10 V
5 17 V
6 -10 V
6 -10 V
5 17 V
6 -10 V
stroke 2529 4296 M
6 16 V
6 -9 V
5 -10 V
6 16 V
6 -9 V
5 -10 V
6 16 V
6 -9 V
5 -10 V
6 16 V
6 -9 V
5 -9 V
6 15 V
6 -9 V
6 16 V
5 -9 V
6 -10 V
6 16 V
5 -9 V
6 -9 V
6 15 V
5 -9 V
6 -9 V
6 15 V
6 -9 V
5 -9 V
6 16 V
6 -9 V
5 15 V
6 -9 V
6 -9 V
5 15 V
6 -9 V
6 15 V
6 -9 V
5 15 V
6 -9 V
6 -8 V
5 14 V
6 -8 V
6 -9 V
5 15 V
6 -9 V
6 -9 V
5 15 V
6 -9 V
6 15 V
6 -9 V
5 -8 V
6 14 V
6 -8 V
5 14 V
6 -8 V
6 14 V
5 -9 V
6 -8 V
6 14 V
6 -8 V
5 14 V
6 -9 V
6 14 V
5 -8 V
6 -8 V
6 14 V
5 -9 V
6 14 V
6 -8 V
5 -8 V
6 14 V
6 -9 V
6 14 V
5 -8 V
6 -8 V
6 13 V
5 -8 V
6 -8 V
6 14 V
5 -8 V
6 -8 V
6 13 V
6 -8 V
5 -8 V
6 14 V
6 -8 V
5 13 V
6 -8 V
6 -8 V
5 13 V
6 -7 V
6 13 V
6 -8 V
5 -8 V
6 13 V
6 -8 V
5 -7 V
6 13 V
6 -8 V
5 -8 V
6 13 V
6 -8 V
5 -7 V
6 13 V
6 -8 V
6 13 V
stroke 3122 4325 M
5 -8 V
6 -7 V
6 12 V
5 -7 V
6 -8 V
6 13 V
5 -8 V
6 -7 V
6 12 V
6 -7 V
5 13 V
6 -8 V
6 -7 V
5 12 V
6 -7 V
6 12 V
5 -7 V
6 -8 V
6 13 V
6 -8 V
5 -7 V
6 12 V
6 -7 V
5 -7 V
6 12 V
6 -7 V
5 12 V
6 -7 V
6 -7 V
5 12 V
6 -8 V
6 -7 V
6 12 V
5 -7 V
6 -7 V
6 12 V
5 -7 V
6 -7 V
6 12 V
5 -7 V
6 -7 V
6 12 V
6 -7 V
5 11 V
6 -7 V
6 -7 V
5 12 V
6 -7 V
6 -7 V
5 12 V
6 -7 V
6 12 V
5 -7 V
6 -7 V
6 11 V
6 -6 V
5 -7 V
6 11 V
6 -7 V
5 12 V
6 -7 V
6 -7 V
5 12 V
6 -7 V
6 -7 V
6 12 V
5 -7 V
6 11 V
6 -6 V
5 -7 V
6 11 V
6 -7 V
5 -6 V
6 11 V
6 -7 V
6 -6 V
5 11 V
6 -7 V
6 -6 V
5 11 V
6 -7 V
6 11 V
5 -6 V
6 -7 V
6 11 V
5 -6 V
6 11 V
6 -7 V
6 -6 V
5 11 V
6 -7 V
6 -6 V
5 11 V
6 -7 V
6 11 V
5 -6 V
6 -7 V
6 11 V
6 -6 V
5 -7 V
6 11 V
6 -6 V
5 -7 V
6 11 V
stroke 3714 4310 M
6 -6 V
5 10 V
6 -6 V
6 11 V
6 -7 V
5 11 V
6 -6 V
6 -7 V
5 11 V
6 -6 V
6 10 V
5 -6 V
6 -6 V
6 10 V
5 -6 V
6 -6 V
6 10 V
6 -6 V
5 -6 V
6 10 V
6 -6 V
5 -6 V
6 10 V
6 -6 V
5 10 V
6 -6 V
6 -6 V
6 10 V
5 -6 V
6 -6 V
6 10 V
5 -6 V
6 10 V
6 -6 V
5 11 V
6 -7 V
6 -6 V
5 11 V
6 -6 V
6 10 V
6 -6 V
5 -6 V
6 10 V
6 -6 V
5 10 V
6 -6 V
6 -6 V
5 10 V
6 -6 V
6 -6 V
6 10 V
5 -6 V
6 -6 V
6 10 V
5 -6 V
6 10 V
6 -6 V
5 -6 V
6 10 V
6 -6 V
6 10 V
5 -6 V
6 -6 V
6 10 V
5 -6 V
6 -6 V
6 10 V
5 -6 V
6 -5 V
6 9 V
5 -6 V
6 10 V
6 -6 V
6 -5 V
5 9 V
6 -5 V
6 -6 V
5 9 V
6 -5 V
6 9 V
5 -5 V
6 -6 V
6 9 V
6 -5 V
5 9 V
6 -5 V
6 -6 V
5 9 V
6 -5 V
6 -6 V
5 9 V
6 -5 V
6 9 V
6 -5 V
5 -6 V
6 9 V
6 -5 V
5 -6 V
6 10 V
6 -6 V
5 9 V
6 -5 V
6 -6 V
5 9 V
stroke 4306 4328 M
6 -5 V
6 -5 V
6 9 V
5 -6 V
6 9 V
6 -5 V
5 -5 V
6 9 V
6 -6 V
5 -5 V
6 9 V
6 -6 V
6 9 V
5 -5 V
6 -5 V
6 9 V
5 -6 V
6 -5 V
6 9 V
5 -5 V
6 -6 V
6 9 V
6 -5 V
5 9 V
6 -6 V
6 -5 V
5 9 V
6 -5 V
6 -5 V
5 8 V
6 -5 V
6 9 V
5 -5 V
6 -6 V
6 9 V
6 -5 V
5 -5 V
6 8 V
6 -5 V
5 -5 V
6 9 V
6 -5 V
5 8 V
6 -5 V
6 -5 V
6 9 V
5 -6 V
6 9 V
6 -5 V
5 -5 V
6 8 V
6 -5 V
5 9 V
6 -5 V
6 -5 V
5 8 V
6 -5 V
6 9 V
6 -6 V
5 9 V
6 -5 V
6 8 V
5 -5 V
6 -5 V
6 9 V
5 -5 V
6 -5 V
6 8 V
6 -5 V
5 -5 V
6 8 V
6 -5 V
5 9 V
6 -5 V
6 -5 V
5 8 V
6 -5 V
6 -5 V
6 8 V
5 -5 V
6 -5 V
6 9 V
5 -5 V
6 8 V
6 -5 V
5 8 V
6 -5 V
6 9 V
5 -5 V
6 -5 V
6 8 V
6 -5 V
5 -5 V
6 8 V
6 -5 V
5 -4 V
6 8 V
6 -5 V
5 8 V
6 -5 V
6 -5 V
6 8 V
5 -5 V
6 -4 V
stroke 4899 4330 M
6 8 V
5 -5 V
6 8 V
6 -5 V
5 -5 V
6 8 V
6 -5 V
6 -4 V
5 8 V
6 -5 V
6 -5 V
5 8 V
6 -5 V
6 8 V
5 -5 V
6 -4 V
6 8 V
5 -5 V
6 -5 V
6 8 V
6 -5 V
5 -4 V
6 8 V
6 -5 V
5 8 V
6 -5 V
6 -5 V
5 8 V
6 -5 V
6 8 V
6 -4 V
5 7 V
6 -4 V
6 -5 V
5 8 V
6 -5 V
6 8 V
5 -5 V
6 -4 V
6 7 V
5 -4 V
6 7 V
6 -4 V
6 -5 V
5 8 V
6 -5 V
6 -4 V
5 7 V
6 -4 V
6 -5 V
5 8 V
6 -5 V
6 8 V
6 -5 V
5 -4 V
6 7 V
6 -4 V
5 7 V
6 -4 V
6 7 V
5 -4 V
6 7 V
6 -4 V
6 7 V
5 -5 V
6 -4 V
6 7 V
5 -4 V
6 -4 V
6 7 V
5 -5 V
6 -4 V
6 7 V
5 -4 V
6 7 V
6 -4 V
6 -5 V
5 8 V
6 -5 V
6 -4 V
5 7 V
6 -4 V
6 7 V
5 -4 V
6 -5 V
6 8 V
6 -5 V
5 -4 V
6 7 V
6 -4 V
5 7 V
6 -4 V
6 -5 V
5 8 V
6 -5 V
6 -4 V
6 7 V
5 -4 V
6 7 V
6 -4 V
5 -5 V
6 7 V
6 -4 V
5 -4 V
stroke 5491 4342 M
6 7 V
6 -4 V
5 -5 V
6 8 V
6 -5 V
6 7 V
5 -4 V
6 -4 V
6 7 V
5 -4 V
6 7 V
6 -5 V
5 -4 V
6 7 V
6 -4 V
6 -4 V
5 7 V
6 -4 V
6 7 V
5 -5 V
6 -4 V
6 7 V
5 -4 V
6 -4 V
6 7 V
5 -4 V
6 6 V
6 -4 V
6 7 V
5 -4 V
6 7 V
6 -4 V
5 -4 V
6 6 V
6 -4 V
5 -4 V
6 7 V
6 -4 V
6 7 V
5 -4 V
6 -4 V
6 6 V
5 -4 V
6 -4 V
6 7 V
5 -4 V
6 -4 V
6 6 V
6 -4 V
5 7 V
6 -4 V
6 -4 V
5 7 V
6 -4 V
6 6 V
5 -4 V
6 7 V
6 -4 V
5 7 V
6 -4 V
6 -4 V
6 6 V
5 -4 V
6 7 V
6 -4 V
5 -4 V
6 6 V
6 -4 V
5 -3 V
6 6 V
6 -4 V
6 -4 V
5 7 V
6 -4 V
6 6 V
5 -4 V
6 -4 V
6 7 V
5 -4 V
6 6 V
6 -3 V
6 -4 V
5 6 V
6 -4 V
6 7 V
5 -4 V
6 -4 V
6 6 V
5 -4 V
211 4338 Star
256 4338 Star
302 4780 Star
347 4670 Star
393 4338 Star
438 4338 Star
484 4338 Star
530 4338 Star
575 4338 Star
621 4205 Star
666 4217 Star
712 4227 Star
757 4235 Star
803 4243 Star
849 4249 Star
894 4255 Star
940 4259 Star
985 4264 Star
1031 4198 Star
1076 4205 Star
1122 4211 Star
1168 4217 Star
1213 4222 Star
1259 4172 Star
1304 4178 Star
1350 4184 Star
1395 4190 Star
1441 4195 Star
1487 4200 Star
1532 4205 Star
1578 4209 Star
1623 4213 Star
1669 4217 Star
1714 4220 Star
1760 4224 Star
1806 4227 Star
1851 4230 Star
1897 4233 Star
1942 4235 Star
1988 4238 Star
2034 4240 Star
2079 4243 Star
2125 4245 Star
2170 4277 Star
2216 4279 Star
2261 4280 Star
2307 4281 Star
2353 4282 Star
2398 4283 Star
2444 4284 Star
2489 4286 Star
2535 4312 Star
2580 4287 Star
2626 4288 Star
2672 4289 Star
2717 4290 Star
2763 4291 Star
2808 4292 Star
2854 4315 Star
2899 4315 Star
2945 4316 Star
2991 4316 Star
3036 4317 Star
3082 4317 Star
3127 4317 Star
3173 4317 Star
3218 4318 Star
3264 4318 Star
3310 4318 Star
3355 4300 Star
3401 4300 Star
3446 4301 Star
3492 4301 Star
3537 4302 Star
3583 4302 Star
3629 4303 Star
3674 4303 Star
3720 4304 Star
3765 4321 Star
3811 4321 Star
3856 4321 Star
3902 4321 Star
3948 4322 Star
3993 4322 Star
4039 4322 Star
4084 4322 Star
4130 4322 Star
4175 4323 Star
4221 4323 Star
4267 4323 Star
4312 4323 Star
4358 4323 Star
4403 4323 Star
4449 4323 Star
4494 4324 Star
4540 4324 Star
4586 4324 Star
4631 4324 Star
4677 4338 Star
4722 4338 Star
4768 4324 Star
4813 4338 Star
4859 4338 Star
4905 4338 Star
4950 4338 Star
4996 4338 Star
5041 4338 Star
5087 4338 Star
5132 4338 Star
5178 4338 Star
5224 4338 Star
5269 4349 Star
5315 4349 Star
5360 4349 Star
5406 4349 Star
5452 4349 Star
5497 4349 Star
5543 4349 Star
5588 4349 Star
5634 4349 Star
5679 4349 Star
5725 4349 Star
5771 4348 Star
5816 4359 Star
5862 4359 Star
5907 4359 Star
5953 4359 Star
5998 4358 Star
6705 4789 Star
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UP
1.000 UL
LTb
0.50 0.50 0.50 C stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Verdana
